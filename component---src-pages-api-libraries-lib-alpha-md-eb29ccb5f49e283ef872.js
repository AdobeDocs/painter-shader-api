"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[5975],{51084:function(e,a,l){l.r(a),l.d(a,{_frontmatter:function(){return o},default:function(){return i}});var n=l(87462),t=l(63366),p=(l(15007),l(64983)),r=l(91515),m=["components"],o={},d={_frontmatter:o},s=r.Z;function i(e){var a=e.components,l=(0,t.Z)(e,m);return(0,p.mdx)(s,(0,n.Z)({},d,l,{components:a,mdxType:"MDXLayout"}),(0,p.mdx)("p",null,(0,p.mdx)("a",{parentName:"p",href:"#section-0"}," ")),(0,p.mdx)("p",null,(0,p.mdx)("a",{parentName:"p",href:"#section-1"}," ")),(0,p.mdx)("h1",{id:"lib-alphaglsl"},"lib-alpha.glsl"),(0,p.mdx)("hr",null),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Public Functions:"),"\n",(0,p.mdx)("inlineCode",{parentName:"p"},"alphaKill")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-glsl"},"import lib-sampler.glsl\n import lib-random.glsl\n")),(0,p.mdx)("p",null,(0,p.mdx)("a",{parentName:"p",href:"#section-2"}," ")),(0,p.mdx)("p",null,"Opacity map, provided by the engine."),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-glsl"},"//: param auto channel_opacity\n uniform SamplerSparse opacity_tex;\n")),(0,p.mdx)("p",null,(0,p.mdx)("a",{parentName:"p",href:"#section-3"}," ")),(0,p.mdx)("p",null,"Alpha test threshold."),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-glsl"},'//: param custom {\n //: "default": 0.33,\n //: "label": "Alpha threshold",\n //: "min": 0.0,\n //: "max": 1.0,\n //: "group": "Common Parameters"\n //: }\n uniform float alpha_threshold;\n')),(0,p.mdx)("p",null,(0,p.mdx)("a",{parentName:"p",href:"#section-4"}," ")),(0,p.mdx)("p",null,"Alpha test dithering."),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-glsl"},'//: param custom {\n //: "default": false,\n //: "label": "Alpha dithering",\n //: "group": "Common Parameters"\n //: }\n uniform bool alpha_dither;\n')),(0,p.mdx)("p",null,(0,p.mdx)("a",{parentName:"p",href:"#section-5"}," ")),(0,p.mdx)("p",null,"Emulate alpha test : discard current fragment if\nits opacity is below a user defined threshold.\nShould be called AFTER texture sampling calls: it can break derivatives"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-glsl"},"void alphaKill(float alpha)\n {\n  float threshold = alpha_dither ? getBlueNoiseThresholdTemporal() : alpha_threshold;\n  if (alpha < threshold) discard;\n }\n \n void alphaKill(SparseCoord coord)\n {\n  alphaKill(getOpacity(opacity_tex, coord));\n }\n \n \n")))}i.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-libraries-lib-alpha-md-eb29ccb5f49e283ef872.js.map