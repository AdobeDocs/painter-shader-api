{"version":3,"file":"component---src-pages-api-shaders-clay-md-1bbf80db2398cc6c14dd.js","mappings":"mTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,oCAAkC,qCAE1CA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,oCACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,ymBAmBhCH,EAAAA,EAAAA,KAAA,wCACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,kCAIhCH,EAAAA,EAAAA,KAAA,mDACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,2DAGhCH,EAAAA,EAAAA,KAAA,8CACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,iEAGhCH,EAAAA,EAAAA,KAAA,sEACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,wiBAchCH,EAAAA,EAAAA,KAAA,8CACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,0DAGhCH,EAAAA,EAAAA,KAAA,mCACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,sFAQpC,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/api/shaders/clay.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-shader-api/painter-shader-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"substance-3d-painter-clay-shader\"\n    }}>{`Substance 3D Painter Clay shader`}</h1>\n    <hr></hr>\n    <p>{`Import from libraries.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`import lib-vectors.glsl\n \n \n //: param custom { \"default\": [0.3, 0.07, 0.05], \"label\": \"Color\", \"widget\": \"color\" }\n uniform vec3 clayColor;\n \n //: param custom { \"default\": 0.25, \"label\": \"Glossiness\", \"min\": 0.001, \"max\": 1.0 }\n uniform float clayGloss;\n \n //: param custom { \"default\": [0.3, 0.3, 0.3], \"label\": \"Dirt Color\", \"widget\": \"color\" }\n uniform vec3 dirtColor;\n \n //: param custom { \"default\": 0.25, \"label\": \"Dirt Amount\", \"min\": 0.0, \"max\": 1.0 }\n uniform float clayDirt;\n \n //: param custom { \"default\": 0.1, \"label\": \"Ambient\", \"min\": 0.0, \"max\": 1.0 }\n uniform float ambient;\n`}</code></pre>\n    <p>{`Entry point of the shader.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`void shade(V2F inputs)\n {\n`}</code></pre>\n    <p>{`We generate local world space vectors`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`  LocalVectors vectors = computeLocalFrame(inputs);\n`}</code></pre>\n    <p>{`Simulate camera aligned lighting`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`  float NdV = max(0.0, dot(vectors.normal, vectors.eye));\n`}</code></pre>\n    <p>{`We generate main color from screen`}{`-`}{`space curvature`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`  vec3 dNdx = dFdx(vectors.normal);\n   vec3 dNdy = dFdy(vectors.normal);\n   vec3 xneg = vectors.normal - dNdx;\n   vec3 xpos = vectors.normal + dNdx;\n   vec3 yneg = vectors.normal - dNdy;\n   vec3 ypos = vectors.normal + dNdy;\n   float depth = length(inputs.position);\n   float curvature = 2.0 * (cross(xneg, xpos).y - cross(yneg, ypos).x) / depth;\n \n   float dirt = clamp(-4.0 * curvature, 0.0, 1.0) * clayDirt;\n   vec3 diffuse = mix(clayColor, dirtColor, dirt);\n   float specular = clayGloss * (1.0 - dirt) * (0.5 * curvature + 0.5);\n`}</code></pre>\n    <p>{`Ambient and diffuse contribution`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`  diffuseShadingOutput((ambient + NdV) * diffuse);\n`}</code></pre>\n    <p>{`Specular contribution`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`  specularShadingOutput(vec3(specular * pow(NdV, 64.0 * clayGloss)));\n }\n \n \n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}