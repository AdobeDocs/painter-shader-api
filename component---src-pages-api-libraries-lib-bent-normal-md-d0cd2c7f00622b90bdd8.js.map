{"version":3,"file":"component---src-pages-api-libraries-lib-bent-normal-md-d0cd2c7f00622b90bdd8.js","mappings":"mTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,MACE,GAAM,uBAAqB,qCAE7BA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,qBAA+B,MAC1DH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,uBAAqC,MAC/DH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,sBAAoC,MAC9DH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,wBAAsC,MAChEH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,iCACxBH,EAAAA,EAAAA,KAAA,iCACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,i+CAoChCH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,qIAEAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,kTAWhCH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,2EAEAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,ghBAqBpC,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/api/libraries/lib-bent-normal.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-shader-api/painter-shader-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-0\"\n      }}>{`#`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-1\"\n      }}>{`#`}</a></p>\n    <h1 {...{\n      \"id\": \"lib-bent-normalglsl\"\n    }}>{`lib`}{`-`}{`bent`}{`-`}{`normal.glsl`}</h1>\n    <hr></hr>\n    <p><strong parentName=\"p\">{`Public Functions:`}</strong>{`\n`}<inlineCode parentName=\"p\">{`computeWSBentNormal`}</inlineCode>{`\n`}<inlineCode parentName=\"p\">{`computeBentNormals`}</inlineCode>{`\n`}<inlineCode parentName=\"p\">{`getDiffuseBentNormal`}</inlineCode>{`\n`}<inlineCode parentName=\"p\">{`getBentNormalSpecularAmount`}</inlineCode></p>\n    <p>{`Import from library`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`import lib-normal.glsl\n \n //: param auto texture_bent_normals\n uniform SamplerSparse bent_normal_texture;\n \n //: param custom {\n //:   \"default\": false,\n //:   \"label\": \"Enable\",\n //:   \"group\": \"Geometry/Bent Normal\",\n //:   \"description\": \"<html><head/><body><p>Uses the baked mesh map <b>Bent normals</b> for more accurate lighting. This is especially noticeable with metallic surfaces.</p></body></html>\"\n //: }\n uniform_specialization bool use_bent_normal;\n \n //: param custom {\n //:   \"default\": 1.0,\n //:   \"min\": 0.0,\n //:   \"max\": 1.0,\n //:   \"visible\": \"input.use_bent_normal\",\n //:   \"label\": \"Diffuse amount\",\n //:   \"group\": \"Geometry/Bent Normal\",\n //:   \"description\": \"<html><head/><body><p>How much the mesh map <b>Bent normals</b> affects the diffuse reflection. E.g: A value of 0 would disregard the bent normals completely and use only the regular <b>Normals</b> mesh map.</p></body></html>\"\n //: }\n uniform float bent_normal_diffuse_amount;\n \n //: param custom {\n //:   \"default\": 1.0,\n //:   \"min\": 0.0,\n //:   \"max\": 1.0,\n //:   \"visible\": \"input.use_bent_normal\",\n //:   \"label\": \"Specular amount\",\n //:   \"group\": \"Geometry/Bent Normal\",\n //:   \"description\": \"<html><head/><body><p>How much the mesh map <b>Bent normals</b> affects the specular reflection. E.g: A value of 0 would disregard the bent normals completely and use only the regular <b>Normals</b> mesh map.</p></body></html>\"\n //: }\n uniform float bent_normal_specular_amount;\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-2\"\n      }}>{`#`}</a></p>\n    <p>{`Helper to compute the bent normal from tangent space normal given by\ngetTSNormal helpers, and local frame of the mesh.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`vec3 computeWSBentNormal(SparseCoord coord, vec3 tangent, vec3 bitangent, vec3 normal)\n {\n   vec3 bent_normal_vec = getTSNormal(coord, bent_normal_texture);\n   return normalize(\n     bent_normal_vec.x * tangent +\n     bent_normal_vec.y * bitangent +\n     bent_normal_vec.z * normal\n   );\n }\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-3\"\n      }}>{`#`}</a></p>\n    <p>{`Compute bent normals\nFill world space bent normal in vectors`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`void computeBentNormal(inout LocalVectors vectors, V2F inputs) {\n   if (use_bent_normal) {\n     vectors.bent = computeWSBentNormal(inputs.sparse_coord, inputs.tangent, inputs.bitangent, inputs.normal);\n   }\n }\n \n vec3 getDiffuseBentNormal(LocalVectors vectors) {\n   return use_bent_normal ?\n     normalize(mix(vectors.normal, vectors.bent, bent_normal_diffuse_amount)) :\n     vectors.normal;\n }\n \n float getBentNormalSpecularAmount() {\n   return use_bent_normal ? bent_normal_specular_amount : 0.0;\n }\n \n \n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}