"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[6207],{39872:function(e,a,t){t.r(a),t.d(a,{_frontmatter:function(){return s},default:function(){return m}});var l=t(87462),n=t(63366),p=(t(15007),t(64983)),r=t(91515),o=["components"],s={},i={_frontmatter:s},d=r.Z;function m(e){var a=e.components,t=(0,n.Z)(e,o);return(0,p.mdx)(d,(0,l.Z)({},i,t,{components:a,mdxType:"MDXLayout"}),(0,p.mdx)("p",null,(0,p.mdx)("a",{parentName:"p",href:"#section-0"}," ")),(0,p.mdx)("p",null,(0,p.mdx)("a",{parentName:"p",href:"#section-1"}," ")),(0,p.mdx)("h1",{id:"lib-alpha-testglsl"},"lib-alpha-test.glsl"),(0,p.mdx)("hr",null),(0,p.mdx)("p",null,(0,p.mdx)("strong",{parentName:"p"},"Public Functions:"),"\n",(0,p.mdx)("inlineCode",{parentName:"p"},"alphaKill")),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-glsl"},"import lib-sampler.glsl\n import lib-random.glsl\n")),(0,p.mdx)("p",null,(0,p.mdx)("a",{parentName:"p",href:"#section-2"}," ")),(0,p.mdx)("p",null,"Opacity map, provided by the engine."),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-glsl"},'//: param auto channel_opacity\n uniform SamplerSparse opacity_tex;\n \n //: param custom {\n //: "group": "Geometry/Opacity",\n //: "label": "Enable alpha test",\n //: "default": false,\n //: "asm": "_opacity_alpha_test",\n //: "description": "<html><head/><body><p>Creates a binary cut-through, meaning any point on the texture is either fully transparent or fully opaque.<br/><b>Please note:</b> The following channel needs to be present for this parameter to have an effect: <b>Opacity</b></p></body></html>"\n //: }\n uniform_specialization bool alpha_test_enabled;\n')),(0,p.mdx)("p",null,(0,p.mdx)("a",{parentName:"p",href:"#section-3"}," ")),(0,p.mdx)("p",null,"Alpha test threshold."),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-glsl"},'//: param custom {\n //: "group": "Geometry/Opacity",\n //: "label": "Alpha test threshold",\n //: "visible": "input.alpha_test_enabled",\n //: "default": 0.33,\n //: "asm": "_opacity_alpha_threshold",\n //: "min": 0.0,\n //: "max": 1.0,\n //: "description": "<html><head/><body><p>The threshold of the <b>Alpha test</b>. The geometry is displayed as fully transparent for values of the <b>Opacity</b> channel that are below this threshold.</p></body></html>"\n //: }\n uniform float alpha_test_threshold;\n')),(0,p.mdx)("p",null,(0,p.mdx)("a",{parentName:"p",href:"#section-4"}," ")),(0,p.mdx)("p",null,"Alpha test dithering."),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-glsl"},'//: param custom {\n //: "group": "Geometry/Opacity",\n //: "label": "Alpha test dithering",\n //: "visible": "input.alpha_test_enabled",\n //: "default": false,\n //: "description": "<html><head/><body><p>Applies a dithered noise to the <b>Alpha test</b> mask.<br/><b>Please note</b>: It is recommended to enable <b>Activate Temporal Anti-Aliasing</b> in <b>Display Settings</b> for a smoother result.</p></body></html>"\n //: }\n uniform bool alpha_test_dither;\n')),(0,p.mdx)("p",null,(0,p.mdx)("a",{parentName:"p",href:"#section-5"}," ")),(0,p.mdx)("p",null,"Emulate alpha test : discard current fragment if\nits opacity is below a user defined threshold.\nShould be called AFTER texture sampling calls: it can break derivatives"),(0,p.mdx)("pre",null,(0,p.mdx)("code",{parentName:"pre",className:"language-glsl"},"void alphaKill(SparseCoord coord)\n {\n  if (alpha_test_enabled) {\n  float alpha = getOpacity(opacity_tex, coord);\n  float threshold = alpha_test_dither ? getBlueNoiseThresholdTemporal() : alpha_test_threshold;\n  if (alpha < threshold) discard;\n  }\n }\n \n \n")))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-libraries-lib-alpha-test-md-d58d666331d1211b19a0.js.map