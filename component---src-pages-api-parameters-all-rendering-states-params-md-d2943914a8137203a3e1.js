"use strict";(self.webpackChunkdev_site_documentation_template=self.webpackChunkdev_site_documentation_template||[]).push([[4857],{34943:function(e,n,a){a.r(n),a.d(n,{_frontmatter:function(){return r},default:function(){return o}});var l=a(87462),t=a(63366),d=(a(15007),a(64983)),m=a(91515),s=["components"],r={},i={_frontmatter:r},p=m.Z;function o(e){var n=e.components,a=(0,t.Z)(e,s);return(0,d.mdx)(p,(0,l.Z)({},i,a,{components:n,mdxType:"MDXLayout"}),(0,d.mdx)("h1",{id:"rendering-states-examples"},"Rendering states examples"),(0,d.mdx)("hr",null),(0,d.mdx)("h2",{id:"enable-syntax"},"Enable syntax"),(0,d.mdx)("p",null,"Rendering states can be conditionally enabled using value of any specialized uniform.\nSimply write an expression resulting in a boolean in the ",(0,d.mdx)("inlineCode",{parentName:"p"},"enable")," parameter.\nAcces other parameters values with ",(0,d.mdx)("inlineCode",{parentName:"p"},"input.parameterName")," syntax.\nConsider the following example where additive blending mode is enabled only when ",(0,d.mdx)("inlineCode",{parentName:"p"},"param1")," is less than 5",".","\nFor more examples and exhaustive syntax, please see the\n",(0,d.mdx)("a",{parentName:"p",href:"https://www.adobe.com/go/painter-visible-display-hide-inputs-outputs"},"Substance Visible If documentation"),"."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-glsl"},'uniform_specialization  int u_slider_param1;\n //: state blend add { "enable" : "input.u_slider_param1 < 5" }\n')),(0,d.mdx)("h2",{id:"backface-culling"},"Backface culling"),(0,d.mdx)("p",null,"Cull back faces:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-glsl"},"//: state cull_face on\n")),(0,d.mdx)("p",null,"Draw front and back faces:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-glsl"},"//: state cull_face off\n")),(0,d.mdx)("h2",{id:"blending"},"Blending"),(0,d.mdx)("p",null,"No blending, fully opaque objects:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-glsl"},"//: state blend none\n")),(0,d.mdx)("p",null,"Standard blending mode for back to front draw order:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-glsl"},"//: state blend over\n")),(0,d.mdx)("p",null,"Standard blending mode for back to front draw order.\nAssume color is pre","-","multiplied by alpha:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-glsl"},"//: state blend over_premult\n")),(0,d.mdx)("p",null,"Additive blending mode:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-glsl"},"//: state blend add\n")),(0,d.mdx)("p",null,"Multiplicative blending mode:"),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-glsl"},"//: state blend multiply\n")),(0,d.mdx)("p",null,"Additive and multiplicative blending mode.\nUses dual blending. The destination color is multiplied by the second output set by ",(0,d.mdx)("em",{parentName:"p"},"color1Output"),"."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-glsl"},"//: state blend add_multiply\n")),(0,d.mdx)("h2",{id:"shader-sampling-locality"},"Shader sampling locality"),(0,d.mdx)("p",null,"By default, document channels are sampled using untransformed texture coordinates for rendering optimizations during painting."),(0,d.mdx)("p",null,"If artifacts appear set the ",(0,d.mdx)("inlineCode",{parentName:"p"},"nonlocal")," state to ",(0,d.mdx)("inlineCode",{parentName:"p"},"on"),"."),(0,d.mdx)("pre",null,(0,d.mdx)("code",{parentName:"pre",className:"language-glsl"},"//: state nonlocal on\n \n \n")))}o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-api-parameters-all-rendering-states-params-md-d2943914a8137203a3e1.js.map