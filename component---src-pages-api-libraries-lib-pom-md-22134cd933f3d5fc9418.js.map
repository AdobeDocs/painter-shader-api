{"version":3,"file":"component---src-pages-api-libraries-lib-pom-md-22134cd933f3d5fc9418.js","mappings":"oTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,MACE,GAAM,eAAa,iBAErBA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,qBAA+B,MAC1DH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,qBAAmC,MAC7DH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,yBACxBH,EAAAA,EAAAA,KAAA,iCACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,+BAGhCH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,yDACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,uoDAgDhCH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,yEACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,6qDAkDhCH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,mEACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,sRAcpC,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/api/libraries/lib-pom.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-shader-api/painter-shader-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-0\"\n      }}>{` `}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-1\"\n      }}>{` `}</a></p>\n    <h1 {...{\n      \"id\": \"lib-pomglsl\"\n    }}>{`lib-pom.glsl`}</h1>\n    <p><strong parentName=\"p\">{`Public Functions:`}</strong>{`\n`}<inlineCode parentName=\"p\">{`getParallaxOffset`}</inlineCode>{`\n`}<inlineCode parentName=\"p\">{`applyParallaxOffset`}</inlineCode></p>\n    <p>{`Import from library`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`import lib-sampler.glsl\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-2\"\n      }}>{` `}</a></p>\n    <p>{`Parallax occlusion mapping related uniforms`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`//: param auto is_2d_view\n uniform bool isTextureView;\n \n //: param auto channel_displacement\n uniform SamplerSparse displacement_texture;\n \n //: param custom {\n //: \"label\": \"Enable\",\n //: \"default\": false,\n //: \"group\": \"Geometry/Parallax Occlusion Mapping\",\n //: \"description\": \"<html><head/><body><p>Simulates displacement of the surface without actually moving the mesh's vertices.<br/><b>Please note</b>: The following channel needs to be present for this parameter to have an effect: <b>Displacement</b></p></body></html>\"\n //: }\n uniform_specialization bool usePOM;\n \n //: param custom {\n //: \"label\": \"Strength\",\n //: \"default\": 1.0,\n //: \"min\": 0.01,\n //: \"max\": 10.0,\n //: \"group\": \"Geometry/Parallax Occlusion Mapping\",\n //: \"visible\": \"input.usePOM\",\n //: \"description\": \"<html><head/><body><p>The strength of the simulated displacement.</p></body></html>\"\n //: }\n uniform float pomStrength;\n \n //: param custom {\n //: \"label\": \"Minimum samples\",\n //: \"default\": 4,\n //: \"min\": 1,\n //: \"max\": 64,\n //: \"group\": \"Geometry/Parallax Occlusion Mapping\",\n //: \"visible\": \"input.usePOM\",\n //: \"description\": \"<html><head/><body><p>The minimum number of samples performed for the intersection lookup.</p></body></html>\"\n //: }\n uniform int minPOMSamples;\n \n //: param custom {\n //: \"label\": \"Maximum samples\",\n //: \"default\": 16,\n //: \"min\": 1,\n //: \"max\": 64,\n //: \"group\": \"Geometry/Parallax Occlusion Mapping\",\n //: \"visible\": \"input.usePOM\",\n //: \"description\": \"<html><head/><body><p>The maximum number of samples performed for the intersection lookup.</p></body></html>\"\n //: }\n uniform int maxPOMSamples;\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-3\"\n      }}>{` `}</a></p>\n    <p>{`Compute the offset of texture coordinates based on parallax`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`vec2 getParallaxOffset(SparseCoord coord, vec3 viewTS)\n {\n  if (!usePOM || isTextureView || !displacement_texture.is_set) return vec2(0.0);\n \n  vec2 dfdx,dfdy;\n  textureSparseQueryGrad(dfdx, dfdy, displacement_texture, coord);\n \n  // Convention: 1.0 is top, -1.0 is bottom - POM is always inward, no extrusion\n  int nbSteps = int(mix(maxPOMSamples, minPOMSamples, viewTS.z));\n  float amplitude = 4.0 * pomStrength / (HEIGHT_FACTOR * abs(viewTS.z) * nbSteps);\n  vec3 rayStep = vec3(-amplitude * viewTS.xy, -2.0 / nbSteps);\n \n  // Raymarch until we cross the surface\n  vec3 rayPos = vec3(coord.tex_coord, 1.0);\n  float prevHeight;\n  float currHeight = getDisplacement(textureGrad(displacement_texture.tex, rayPos.xy, dfdx, dfdy));\n  int i = 0;\n  do {\n  rayPos += rayStep;\n  prevHeight = currHeight;\n  currHeight = getDisplacement(textureGrad(displacement_texture.tex, rayPos.xy, dfdx, dfdy));\n  i++;\n  } while (i < nbSteps && currHeight < rayPos.z);\n \n  // Binary search with linear interpolation to refine intersection\n  vec3 prevRayPos = rayPos - rayStep;\n  vec3 newRayPos = prevRayPos;\n  float newHeight = prevHeight;\n  i = 0;\n  while (i < 3 && abs(newHeight - newRayPos.z) > 1e-3) {\n  float prevDelta = prevRayPos.z - prevHeight;\n  float delta = currHeight - rayPos.z;\n  newRayPos = (prevDelta * rayPos + delta * prevRayPos) / (prevDelta + delta);\n  newHeight = getDisplacement(textureGrad(displacement_texture.tex, newRayPos.xy, dfdx, dfdy));\n \n  if (newHeight > newRayPos.z) {\n  currHeight = newHeight;\n  rayPos = newRayPos;\n  } else {\n  prevHeight = newHeight;\n  prevRayPos = newRayPos;\n  }\n \n  i++;\n  }\n \n  return newRayPos.xy - coord.tex_coord;\n }\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-4\"\n      }}>{` `}</a></p>\n    <p>{`Update input texture coordinates with parallax offset`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`void applyParallaxOffset(inout V2F inputs, vec3 viewTS)\n {\n  vec2 offset = getParallaxOffset(inputs.sparse_coord, viewTS);\n  if (any(notEqual(offset,vec2(0.0)))) {\n  inputs.tex_coord += offset;\n  inputs.sparse_coord = getSparseCoord(inputs.tex_coord);\n  }\n }\n \n \n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}