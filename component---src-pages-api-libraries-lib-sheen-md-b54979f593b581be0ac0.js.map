{"version":3,"file":"component---src-pages-api-libraries-lib-sheen-md-b54979f593b581be0ac0.js","mappings":"oTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,aAAAA,GAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAFDC,EAAUD,EAAVC,WACGC,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,4BACAA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,MACE,GAAM,iBAAe,mBAEvBA,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,UAAQG,WAAW,KAAG,qBAA+B,MAC1DH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAG,qBACxBH,EAAAA,EAAAA,KAAA,iCACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,+BAGhCH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,qDACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,wxBAgBhCH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,iCACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,2BAGhCH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,0EACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,uwBAsBhCH,EAAAA,EAAAA,KAAA,UAAGA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACb,KAAQ,cAAY,OAExBH,EAAAA,EAAAA,KAAA,oFACAA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,iBAAe,okCAqCpC,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://dev-site-documentation-template/./src/pages/api/libraries/lib-sheen.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-shader-api/painter-shader-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`lib-sheen.glsl`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-0\"\n      }}>{` `}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-1\"\n      }}>{` `}</a></p>\n    <h1 {...{\n      \"id\": \"lib-sheenglsl\"\n    }}>{`lib-sheen.glsl`}</h1>\n    <p><strong parentName=\"p\">{`Public Functions:`}</strong>{`\n`}<inlineCode parentName=\"p\">{`pbrComputeSheen`}</inlineCode></p>\n    <p>{`Import from library`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`import lib-defines.glsl\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-2\"\n      }}>{` `}</a></p>\n    <p>{`All engine parameters useful for sheen.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`//: param custom {\n //: \"group\": \"Base Surface\",\n //: \"label\": \"Enable sheen\",\n //: \"default\": false,\n //: \"asm\": \"sheen\",\n //: \"description\": \"<html><head/><body><p>Simulates the effect of microscopic fibers or fuzz on the surface.<br/><b>Please note</b>: The following channel needs to be present for this parameter to have an effect: <b>Sheen opacity</b>. Optionally, the following channels provide additional control: <b>Sheen color</b> and <b>Sheen roughness</b>.</p></body></html>\"\n //: }\n uniform_specialization bool sheenEnabled;\n //: param auto channel_sheenopacity\n uniform SamplerSparse sheenOpacity_tex;\n //: param auto channel_sheencolor\n uniform SamplerSparse sheenColor_tex;\n //: param auto channel_sheenroughness\n uniform SamplerSparse sheenRoughness_tex;\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-3\"\n      }}>{` `}</a></p>\n    <p>{`Import from library`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`import lib-pbr.glsl\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-4\"\n      }}>{` `}</a></p>\n    <p>{`Compute the sheen BRDF contribution for importance sampling.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`vec3 sheen_contrib(float ndh, float ndl, float ndv, vec3 Ks, float roughness)\n {\n  float ndh2 = ndh*ndh;\n  float ndl2 = ndl*ndl;\n  float ndv2 = ndv*ndv;\n  float r2 = roughness*roughness;\n \n  // TODO: move the D component out, to the importance sampling.\n  float t = 1.0 - ndh2 + ndh2/r2;\n  float Pi_D = 1.0 / (roughness * t * t);\n \n  float Li = sqrt(1.0 - ndl2 + r2*ndl2) / ndl;\n  float Lo = sqrt(1.0 - ndv2 + r2*ndv2) / ndv;\n  float G = (1.0 - exp(-(Li + Lo))) / (Li + Lo);\n \n  // This is the contribution when using importance sampling with uniform\n  // sample distribution. This means sheen_contrib = sheen_brdf / (1/(2*Pi))\n  // ndl is omitted since it cancels out with the ndl outside the BRDF.\n  return Ks * ((2.0 * Pi_D * G / ndv) * 0.5);\n }\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-5\"\n      }}>{` `}</a></p>\n    <p>{`Compute the microfacets sheen specular reflection to the viewer's eye.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`vec3 pbrComputeSheen(LocalVectors vectors, vec3 specColor, float roughness)\n {\n  vec3 radiance = vec3(0.0);\n  float ndv = dot(vectors.eye, vectors.normal);\n  roughness = max(1e-3, roughness);\n  vec3 envT = worldToEnvSpace(vectors.tangent);\n  vec3 envB = worldToEnvSpace(vectors.bitangent);\n  vec3 envN = worldToEnvSpace(vectors.normal);\n  vec3 envE = worldToEnvSpace(vectors.eye);\n  vec3 envVertexNormal = worldToEnvSpace(vectors.vertexNormal);\n \n  for(int i=0; i<nbSamples; ++i)\n  {\n  vec2 Xi = fibonacci2D(i, nbSamples);\n  vec3 Ln = uniformSample(Xi, envT, envB, envN);\n  vec3 Hn = normalize(Ln + envE);\n  float fade = horizonFading(dot(envVertexNormal, Ln), horizonFade);\n \n  float ndl = dot(envN, Ln);\n  if (ndl > 0.0 && ndv > 0.0) {\n  ndl = max( 1e-8, ndl );\n  float vdh = max(1e-8, dot(envE, Hn));\n  float ndh = max(1e-8, dot(envN, Hn));\n  float lodS = computeLOD(Ln, 0.5 * M_INV_PI);\n  radiance += fade * envSample(Ln, lodS) * sheen_contrib(ndh, ndl, ndv, specColor, roughness);\n  }\n  }\n  radiance /= float(nbSamples);\n \n  return radiance;\n }\n \n \n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}