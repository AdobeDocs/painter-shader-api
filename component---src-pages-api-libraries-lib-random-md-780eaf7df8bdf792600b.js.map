{"version":3,"file":"component---src-pages-api-libraries-lib-random-md-780eaf7df8bdf792600b.js","mappings":"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","sources":["webpack://dev-site-documentation-template/./src/pages/api/libraries/lib-random.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/painter-shader-api/painter-shader-api/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-0\"\n      }}>{` `}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-1\"\n      }}>{` `}</a></p>\n    <p>{`===============`}</p>\n    <p><strong parentName=\"p\">{`Public Functions:`}</strong>{`\n`}<inlineCode parentName=\"p\">{`getBlueNoiseThreshold`}</inlineCode>{`\n`}<inlineCode parentName=\"p\">{`getBlueNoiseThresholdTemporal`}</inlineCode>{`\n`}<inlineCode parentName=\"p\">{`fibonacci1D`}</inlineCode>{`\n`}<inlineCode parentName=\"p\">{`fibonacci2D`}</inlineCode>{`\n`}<inlineCode parentName=\"p\">{`fibonacci2DDitheredTemporal`}</inlineCode></p>\n    <p>{`Import from library`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{``}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-2\"\n      }}>{` `}</a></p>\n    <p>{`A 2D blue noise texture containing scalar values`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`//: param auto texture_blue_noise\n uniform sampler2D texture_blue_noise;\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-3\"\n      }}>{` `}</a></p>\n    <p>{`Blue noise texture resolution`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`const ivec2 texture_blue_noise_size = ivec2(256);\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-4\"\n      }}>{` `}</a></p>\n    <p>{`Current frame random seed`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`//: param auto random_seed\n uniform int alg_random_seed;\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-5\"\n      }}>{` `}</a></p>\n    <p>{`Get an uniform random value based on pixel coordinates.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`float getBlueNoiseThreshold()\n {\n  return texture(texture_blue_noise, gl_FragCoord.xy / vec2(texture_blue_noise_size)).x + 0.5 / 65536.0;\n }\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-6\"\n      }}>{` `}</a></p>\n    <p>{`Get an uniform random value based on pixel coordinates and frame id.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`float getBlueNoiseThresholdTemporal()\n {\n  return fract(getBlueNoiseThreshold() + M_GOLDEN_RATIO * alg_random_seed);\n }\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-7\"\n      }}>{` `}</a></p>\n    <p>{`Return the i`}<em parentName=\"p\">{`th`}</em>{` number from fibonacci sequence.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`float fibonacci1D(int i)\n {\n  return fract((float(i) + 1.0) * M_GOLDEN_RATIO);\n }\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-8\"\n      }}>{` `}</a></p>\n    <p>{`Return the i`}<em parentName=\"p\">{`th`}</em>{` couple from the fibonacci sequence.\nnbSample is required to get an uniform distribution.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`vec2 fibonacci2D(int i, int nbSamples)\n {\n  return vec2(\n  (float(i)+0.5) / float(nbSamples),\n  fibonacci1D(i)\n  );\n }\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#section-9\"\n      }}>{` `}</a></p>\n    <p>{`Return the i`}<em parentName=\"p\">{`th`}</em>{` couple from the fibonacci sequence.\nnbSample is required to get an uniform distribution.\nThis version has a per frame and per pixel pseudo-random rotation applied.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-glsl\"\n      }}>{`vec2 fibonacci2DDitheredTemporal(int i, int nbSamples)\n {\n  vec2 s = fibonacci2D(i, nbSamples);\n  s.x += getBlueNoiseThresholdTemporal();\n  return s;\n }\n \n \n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}